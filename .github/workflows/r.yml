# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        r-version: ['4.3', '4.4']

    steps:
      - uses: actions/checkout@v4

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      # Cache R package library
      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ~/.R/library
          key: ${{ runner.os }}-R-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: |
            ${{ runner.os }}-R-
  
      # Install dependencies
      - name: Install dependencies
        run: |
          Rscript -e 'if (!requireNamespace("remotes", quietly = TRUE)) install.packages("remotes")'
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'

      # Run your tests or build
      - name: Run R script
        run: |
          Rscript -e 'devtools::check()'

      # - run: Rscript -e 'print("hello")'
      
      # - name: Install dependencies
      #   run: |
      #     install.packages(c("remotes", "rcmdcheck"))
      #     remotes::install_deps(dependencies = TRUE)
      #   shell: Rscript {0}
      
      # - name: Check
      #   run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
      #   shell: Rscript {0}


